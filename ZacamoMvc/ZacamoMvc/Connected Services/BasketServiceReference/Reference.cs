//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZacamoMvc.BasketServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDto", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class ProductDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ManufacturerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePath {
            get {
                return this.ImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePathField, value) != true)) {
                    this.ImagePathField = value;
                    this.RaisePropertyChanged("ImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ManufacturerId {
            get {
                return this.ManufacturerIdField;
            }
            set {
                if ((this.ManufacturerIdField.Equals(value) != true)) {
                    this.ManufacturerIdField = value;
                    this.RaisePropertyChanged("ManufacturerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManufacturerName {
            get {
                return this.ManufacturerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerNameField, value) != true)) {
                    this.ManufacturerNameField = value;
                    this.RaisePropertyChanged("ManufacturerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StockAmount {
            get {
                return this.StockAmountField;
            }
            set {
                if ((this.StockAmountField.Equals(value) != true)) {
                    this.StockAmountField = value;
                    this.RaisePropertyChanged("StockAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BasketServiceReference.IBasketService")]
    public interface IBasketService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/AddItemToBasket", ReplyAction="http://tempuri.org/IBasketService/AddItemToBasketResponse")]
        System.Collections.Generic.List<ZacamoMvc.BasketServiceReference.ProductDto> AddItemToBasket(System.Collections.Generic.List<Entities.Product> basket, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/AddItemToBasket", ReplyAction="http://tempuri.org/IBasketService/AddItemToBasketResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.BasketServiceReference.ProductDto>> AddItemToBasketAsync(System.Collections.Generic.List<Entities.Product> basket, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/RemoveItemFromBasket", ReplyAction="http://tempuri.org/IBasketService/RemoveItemFromBasketResponse")]
        System.Collections.Generic.List<ZacamoMvc.BasketServiceReference.ProductDto> RemoveItemFromBasket(System.Collections.Generic.List<Entities.Product> basket, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/RemoveItemFromBasket", ReplyAction="http://tempuri.org/IBasketService/RemoveItemFromBasketResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.BasketServiceReference.ProductDto>> RemoveItemFromBasketAsync(System.Collections.Generic.List<Entities.Product> basket, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/Checkout", ReplyAction="http://tempuri.org/IBasketService/CheckoutResponse")]
        System.Collections.Generic.List<ZacamoMvc.BasketServiceReference.ProductDto> Checkout(System.Collections.Generic.List<Entities.Product> basket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/Checkout", ReplyAction="http://tempuri.org/IBasketService/CheckoutResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.BasketServiceReference.ProductDto>> CheckoutAsync(System.Collections.Generic.List<Entities.Product> basket);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBasketServiceChannel : ZacamoMvc.BasketServiceReference.IBasketService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BasketServiceClient : System.ServiceModel.ClientBase<ZacamoMvc.BasketServiceReference.IBasketService>, ZacamoMvc.BasketServiceReference.IBasketService {
        
        public BasketServiceClient() {
        }
        
        public BasketServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BasketServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BasketServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BasketServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<ZacamoMvc.BasketServiceReference.ProductDto> AddItemToBasket(System.Collections.Generic.List<Entities.Product> basket, int id) {
            return base.Channel.AddItemToBasket(basket, id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.BasketServiceReference.ProductDto>> AddItemToBasketAsync(System.Collections.Generic.List<Entities.Product> basket, int id) {
            return base.Channel.AddItemToBasketAsync(basket, id);
        }
        
        public System.Collections.Generic.List<ZacamoMvc.BasketServiceReference.ProductDto> RemoveItemFromBasket(System.Collections.Generic.List<Entities.Product> basket, int id) {
            return base.Channel.RemoveItemFromBasket(basket, id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.BasketServiceReference.ProductDto>> RemoveItemFromBasketAsync(System.Collections.Generic.List<Entities.Product> basket, int id) {
            return base.Channel.RemoveItemFromBasketAsync(basket, id);
        }
        
        public System.Collections.Generic.List<ZacamoMvc.BasketServiceReference.ProductDto> Checkout(System.Collections.Generic.List<Entities.Product> basket) {
            return base.Channel.Checkout(basket);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.BasketServiceReference.ProductDto>> CheckoutAsync(System.Collections.Generic.List<Entities.Product> basket) {
            return base.Channel.CheckoutAsync(basket);
        }
    }
}
