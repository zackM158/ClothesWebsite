//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZacamoMvc.ProductServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDto", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class ProductDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ManufacturerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePath {
            get {
                return this.ImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePathField, value) != true)) {
                    this.ImagePathField = value;
                    this.RaisePropertyChanged("ImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ManufacturerId {
            get {
                return this.ManufacturerIdField;
            }
            set {
                if ((this.ManufacturerIdField.Equals(value) != true)) {
                    this.ManufacturerIdField = value;
                    this.RaisePropertyChanged("ManufacturerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManufacturerName {
            get {
                return this.ManufacturerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerNameField, value) != true)) {
                    this.ManufacturerNameField = value;
                    this.RaisePropertyChanged("ManufacturerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StockAmount {
            get {
                return this.StockAmountField;
            }
            set {
                if ((this.StockAmountField.Equals(value) != true)) {
                    this.StockAmountField = value;
                    this.RaisePropertyChanged("StockAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductServiceReference.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProducts", ReplyAction="http://tempuri.org/IProductService/GetAllProductsResponse")]
        System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto> GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProducts", ReplyAction="http://tempuri.org/IProductService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto>> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProductsWithManufacturers", ReplyAction="http://tempuri.org/IProductService/GetAllProductsWithManufacturersResponse")]
        System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto> GetAllProductsWithManufacturers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProductsWithManufacturers", ReplyAction="http://tempuri.org/IProductService/GetAllProductsWithManufacturersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto>> GetAllProductsWithManufacturersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddProduct", ReplyAction="http://tempuri.org/IProductService/AddProductResponse")]
        int AddProduct(Entities.Product product, string fileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddProduct", ReplyAction="http://tempuri.org/IProductService/AddProductResponse")]
        System.Threading.Tasks.Task<int> AddProductAsync(Entities.Product product, string fileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProduct", ReplyAction="http://tempuri.org/IProductService/UpdateProductResponse")]
        string UpdateProduct(Entities.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProduct", ReplyAction="http://tempuri.org/IProductService/UpdateProductResponse")]
        System.Threading.Tasks.Task<string> UpdateProductAsync(Entities.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductsByManufacturer", ReplyAction="http://tempuri.org/IProductService/GetProductsByManufacturerResponse")]
        System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto> GetProductsByManufacturer(string manufacturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductsByManufacturer", ReplyAction="http://tempuri.org/IProductService/GetProductsByManufacturerResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto>> GetProductsByManufacturerAsync(string manufacturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductsByCategory", ReplyAction="http://tempuri.org/IProductService/GetProductsByCategoryResponse")]
        System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto> GetProductsByCategory(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductsByCategory", ReplyAction="http://tempuri.org/IProductService/GetProductsByCategoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto>> GetProductsByCategoryAsync(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProduct", ReplyAction="http://tempuri.org/IProductService/DeleteProductResponse")]
        string DeleteProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProduct", ReplyAction="http://tempuri.org/IProductService/DeleteProductResponse")]
        System.Threading.Tasks.Task<string> DeleteProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/ValidCategory", ReplyAction="http://tempuri.org/IProductService/ValidCategoryResponse")]
        string ValidCategory(string initalCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/ValidCategory", ReplyAction="http://tempuri.org/IProductService/ValidCategoryResponse")]
        System.Threading.Tasks.Task<string> ValidCategoryAsync(string initalCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductById", ReplyAction="http://tempuri.org/IProductService/GetProductByIdResponse")]
        ZacamoMvc.ProductServiceReference.ProductDto GetProductById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductById", ReplyAction="http://tempuri.org/IProductService/GetProductByIdResponse")]
        System.Threading.Tasks.Task<ZacamoMvc.ProductServiceReference.ProductDto> GetProductByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SearchProducts", ReplyAction="http://tempuri.org/IProductService/SearchProductsResponse")]
        System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto> SearchProducts(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SearchProducts", ReplyAction="http://tempuri.org/IProductService/SearchProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto>> SearchProductsAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SavedProducts", ReplyAction="http://tempuri.org/IProductService/SavedProductsResponse")]
        System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto> SavedProducts(string savedProductsString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SavedProducts", ReplyAction="http://tempuri.org/IProductService/SavedProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto>> SavedProductsAsync(string savedProductsString);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : ZacamoMvc.ProductServiceReference.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<ZacamoMvc.ProductServiceReference.IProductService>, ZacamoMvc.ProductServiceReference.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto> GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto>> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto> GetAllProductsWithManufacturers() {
            return base.Channel.GetAllProductsWithManufacturers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto>> GetAllProductsWithManufacturersAsync() {
            return base.Channel.GetAllProductsWithManufacturersAsync();
        }
        
        public int AddProduct(Entities.Product product, string fileType) {
            return base.Channel.AddProduct(product, fileType);
        }
        
        public System.Threading.Tasks.Task<int> AddProductAsync(Entities.Product product, string fileType) {
            return base.Channel.AddProductAsync(product, fileType);
        }
        
        public string UpdateProduct(Entities.Product product) {
            return base.Channel.UpdateProduct(product);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProductAsync(Entities.Product product) {
            return base.Channel.UpdateProductAsync(product);
        }
        
        public System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto> GetProductsByManufacturer(string manufacturer) {
            return base.Channel.GetProductsByManufacturer(manufacturer);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto>> GetProductsByManufacturerAsync(string manufacturer) {
            return base.Channel.GetProductsByManufacturerAsync(manufacturer);
        }
        
        public System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto> GetProductsByCategory(string category) {
            return base.Channel.GetProductsByCategory(category);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto>> GetProductsByCategoryAsync(string category) {
            return base.Channel.GetProductsByCategoryAsync(category);
        }
        
        public string DeleteProduct(int id) {
            return base.Channel.DeleteProduct(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteProductAsync(int id) {
            return base.Channel.DeleteProductAsync(id);
        }
        
        public string ValidCategory(string initalCategory) {
            return base.Channel.ValidCategory(initalCategory);
        }
        
        public System.Threading.Tasks.Task<string> ValidCategoryAsync(string initalCategory) {
            return base.Channel.ValidCategoryAsync(initalCategory);
        }
        
        public ZacamoMvc.ProductServiceReference.ProductDto GetProductById(int id) {
            return base.Channel.GetProductById(id);
        }
        
        public System.Threading.Tasks.Task<ZacamoMvc.ProductServiceReference.ProductDto> GetProductByIdAsync(int id) {
            return base.Channel.GetProductByIdAsync(id);
        }
        
        public System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto> SearchProducts(string searchTerm) {
            return base.Channel.SearchProducts(searchTerm);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto>> SearchProductsAsync(string searchTerm) {
            return base.Channel.SearchProductsAsync(searchTerm);
        }
        
        public System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto> SavedProducts(string savedProductsString) {
            return base.Channel.SavedProducts(savedProductsString);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.ProductServiceReference.ProductDto>> SavedProductsAsync(string savedProductsString) {
            return base.Channel.SavedProductsAsync(savedProductsString);
        }
    }
}
