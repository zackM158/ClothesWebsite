//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZacamoMvc.ManufacturerServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManufacturerDto", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class ManufacturerDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountOfProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ManufacturerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebsiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AmountOfProducts {
            get {
                return this.AmountOfProductsField;
            }
            set {
                if ((this.AmountOfProductsField.Equals(value) != true)) {
                    this.AmountOfProductsField = value;
                    this.RaisePropertyChanged("AmountOfProducts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ManufacturerId {
            get {
                return this.ManufacturerIdField;
            }
            set {
                if ((this.ManufacturerIdField.Equals(value) != true)) {
                    this.ManufacturerIdField = value;
                    this.RaisePropertyChanged("ManufacturerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website {
            get {
                return this.WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteField, value) != true)) {
                    this.WebsiteField = value;
                    this.RaisePropertyChanged("Website");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ManufacturerServiceReference.IManufacturerService")]
    public interface IManufacturerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManufacturerService/GetAllManufacturers", ReplyAction="http://tempuri.org/IManufacturerService/GetAllManufacturersResponse")]
        System.Collections.Generic.List<ZacamoMvc.ManufacturerServiceReference.ManufacturerDto> GetAllManufacturers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManufacturerService/GetAllManufacturers", ReplyAction="http://tempuri.org/IManufacturerService/GetAllManufacturersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.ManufacturerServiceReference.ManufacturerDto>> GetAllManufacturersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManufacturerService/AddManufacturer", ReplyAction="http://tempuri.org/IManufacturerService/AddManufacturerResponse")]
        int AddManufacturer(Entities.Manufacturer manufacturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManufacturerService/AddManufacturer", ReplyAction="http://tempuri.org/IManufacturerService/AddManufacturerResponse")]
        System.Threading.Tasks.Task<int> AddManufacturerAsync(Entities.Manufacturer manufacturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManufacturerService/UpdateManufacturer", ReplyAction="http://tempuri.org/IManufacturerService/UpdateManufacturerResponse")]
        string UpdateManufacturer(Entities.Manufacturer manufacturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManufacturerService/UpdateManufacturer", ReplyAction="http://tempuri.org/IManufacturerService/UpdateManufacturerResponse")]
        System.Threading.Tasks.Task<string> UpdateManufacturerAsync(Entities.Manufacturer manufacturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManufacturerService/DeleteManufacturer", ReplyAction="http://tempuri.org/IManufacturerService/DeleteManufacturerResponse")]
        string DeleteManufacturer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManufacturerService/DeleteManufacturer", ReplyAction="http://tempuri.org/IManufacturerService/DeleteManufacturerResponse")]
        System.Threading.Tasks.Task<string> DeleteManufacturerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManufacturerService/GetManufacturerById", ReplyAction="http://tempuri.org/IManufacturerService/GetManufacturerByIdResponse")]
        ZacamoMvc.ManufacturerServiceReference.ManufacturerDto GetManufacturerById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManufacturerService/GetManufacturerById", ReplyAction="http://tempuri.org/IManufacturerService/GetManufacturerByIdResponse")]
        System.Threading.Tasks.Task<ZacamoMvc.ManufacturerServiceReference.ManufacturerDto> GetManufacturerByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManufacturerServiceChannel : ZacamoMvc.ManufacturerServiceReference.IManufacturerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManufacturerServiceClient : System.ServiceModel.ClientBase<ZacamoMvc.ManufacturerServiceReference.IManufacturerService>, ZacamoMvc.ManufacturerServiceReference.IManufacturerService {
        
        public ManufacturerServiceClient() {
        }
        
        public ManufacturerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManufacturerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManufacturerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManufacturerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<ZacamoMvc.ManufacturerServiceReference.ManufacturerDto> GetAllManufacturers() {
            return base.Channel.GetAllManufacturers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ZacamoMvc.ManufacturerServiceReference.ManufacturerDto>> GetAllManufacturersAsync() {
            return base.Channel.GetAllManufacturersAsync();
        }
        
        public int AddManufacturer(Entities.Manufacturer manufacturer) {
            return base.Channel.AddManufacturer(manufacturer);
        }
        
        public System.Threading.Tasks.Task<int> AddManufacturerAsync(Entities.Manufacturer manufacturer) {
            return base.Channel.AddManufacturerAsync(manufacturer);
        }
        
        public string UpdateManufacturer(Entities.Manufacturer manufacturer) {
            return base.Channel.UpdateManufacturer(manufacturer);
        }
        
        public System.Threading.Tasks.Task<string> UpdateManufacturerAsync(Entities.Manufacturer manufacturer) {
            return base.Channel.UpdateManufacturerAsync(manufacturer);
        }
        
        public string DeleteManufacturer(int id) {
            return base.Channel.DeleteManufacturer(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteManufacturerAsync(int id) {
            return base.Channel.DeleteManufacturerAsync(id);
        }
        
        public ZacamoMvc.ManufacturerServiceReference.ManufacturerDto GetManufacturerById(int id) {
            return base.Channel.GetManufacturerById(id);
        }
        
        public System.Threading.Tasks.Task<ZacamoMvc.ManufacturerServiceReference.ManufacturerDto> GetManufacturerByIdAsync(int id) {
            return base.Channel.GetManufacturerByIdAsync(id);
        }
    }
}
