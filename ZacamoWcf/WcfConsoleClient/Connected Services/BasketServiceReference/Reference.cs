//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfConsoleClient.BasketServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BasketServiceReference.IBasketService")]
    public interface IBasketService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/AddItemToBasket", ReplyAction="http://tempuri.org/IBasketService/AddItemToBasketResponse")]
        System.Collections.Generic.List<WcfService.ProductDto> AddItemToBasket(System.Collections.Generic.List<Entities.Product> basket, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/AddItemToBasket", ReplyAction="http://tempuri.org/IBasketService/AddItemToBasketResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WcfService.ProductDto>> AddItemToBasketAsync(System.Collections.Generic.List<Entities.Product> basket, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/RemoveItemFromBasket", ReplyAction="http://tempuri.org/IBasketService/RemoveItemFromBasketResponse")]
        System.Collections.Generic.List<WcfService.ProductDto> RemoveItemFromBasket(System.Collections.Generic.List<Entities.Product> basket, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/RemoveItemFromBasket", ReplyAction="http://tempuri.org/IBasketService/RemoveItemFromBasketResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WcfService.ProductDto>> RemoveItemFromBasketAsync(System.Collections.Generic.List<Entities.Product> basket, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/Checkout", ReplyAction="http://tempuri.org/IBasketService/CheckoutResponse")]
        System.Collections.Generic.List<WcfService.ProductDto> Checkout(System.Collections.Generic.List<Entities.Product> basket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasketService/Checkout", ReplyAction="http://tempuri.org/IBasketService/CheckoutResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WcfService.ProductDto>> CheckoutAsync(System.Collections.Generic.List<Entities.Product> basket);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBasketServiceChannel : WcfConsoleClient.BasketServiceReference.IBasketService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BasketServiceClient : System.ServiceModel.ClientBase<WcfConsoleClient.BasketServiceReference.IBasketService>, WcfConsoleClient.BasketServiceReference.IBasketService {
        
        public BasketServiceClient() {
        }
        
        public BasketServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BasketServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BasketServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BasketServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<WcfService.ProductDto> AddItemToBasket(System.Collections.Generic.List<Entities.Product> basket, int id) {
            return base.Channel.AddItemToBasket(basket, id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WcfService.ProductDto>> AddItemToBasketAsync(System.Collections.Generic.List<Entities.Product> basket, int id) {
            return base.Channel.AddItemToBasketAsync(basket, id);
        }
        
        public System.Collections.Generic.List<WcfService.ProductDto> RemoveItemFromBasket(System.Collections.Generic.List<Entities.Product> basket, int id) {
            return base.Channel.RemoveItemFromBasket(basket, id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WcfService.ProductDto>> RemoveItemFromBasketAsync(System.Collections.Generic.List<Entities.Product> basket, int id) {
            return base.Channel.RemoveItemFromBasketAsync(basket, id);
        }
        
        public System.Collections.Generic.List<WcfService.ProductDto> Checkout(System.Collections.Generic.List<Entities.Product> basket) {
            return base.Channel.Checkout(basket);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WcfService.ProductDto>> CheckoutAsync(System.Collections.Generic.List<Entities.Product> basket) {
            return base.Channel.CheckoutAsync(basket);
        }
    }
}
