//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfConsoleClient.UserServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserServiceReference.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllUsers", ReplyAction="http://tempuri.org/IUserService/GetAllUsersResponse")]
        System.Collections.Generic.List<WcfService.UserDto> GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllUsers", ReplyAction="http://tempuri.org/IUserService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WcfService.UserDto>> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUser", ReplyAction="http://tempuri.org/IUserService/AddUserResponse")]
        int AddUser(Entities.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUser", ReplyAction="http://tempuri.org/IUserService/AddUserResponse")]
        System.Threading.Tasks.Task<int> AddUserAsync(Entities.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        string UpdateUser(Entities.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        System.Threading.Tasks.Task<string> UpdateUserAsync(Entities.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUser", ReplyAction="http://tempuri.org/IUserService/DeleteUserResponse")]
        string DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUser", ReplyAction="http://tempuri.org/IUserService/DeleteUserResponse")]
        System.Threading.Tasks.Task<string> DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserById", ReplyAction="http://tempuri.org/IUserService/GetUserByIdResponse")]
        WcfService.UserDto GetUserById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserById", ReplyAction="http://tempuri.org/IUserService/GetUserByIdResponse")]
        System.Threading.Tasks.Task<WcfService.UserDto> GetUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByEmail", ReplyAction="http://tempuri.org/IUserService/GetUserByEmailResponse")]
        WcfService.UserDto GetUserByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByEmail", ReplyAction="http://tempuri.org/IUserService/GetUserByEmailResponse")]
        System.Threading.Tasks.Task<WcfService.UserDto> GetUserByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdatePassword", ReplyAction="http://tempuri.org/IUserService/UpdatePasswordResponse")]
        string UpdatePassword(int id, string salt, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdatePassword", ReplyAction="http://tempuri.org/IUserService/UpdatePasswordResponse")]
        System.Threading.Tasks.Task<string> UpdatePasswordAsync(int id, string salt, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddPremium", ReplyAction="http://tempuri.org/IUserService/AddPremiumResponse")]
        string AddPremium(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddPremium", ReplyAction="http://tempuri.org/IUserService/AddPremiumResponse")]
        System.Threading.Tasks.Task<string> AddPremiumAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ChangeAdmin", ReplyAction="http://tempuri.org/IUserService/ChangeAdminResponse")]
        void ChangeAdmin(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ChangeAdmin", ReplyAction="http://tempuri.org/IUserService/ChangeAdminResponse")]
        System.Threading.Tasks.Task ChangeAdminAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ChangePremium", ReplyAction="http://tempuri.org/IUserService/ChangePremiumResponse")]
        void ChangePremium(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ChangePremium", ReplyAction="http://tempuri.org/IUserService/ChangePremiumResponse")]
        System.Threading.Tasks.Task ChangePremiumAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ToggleSavedItems", ReplyAction="http://tempuri.org/IUserService/ToggleSavedItemsResponse")]
        void ToggleSavedItems(int userId, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ToggleSavedItems", ReplyAction="http://tempuri.org/IUserService/ToggleSavedItemsResponse")]
        System.Threading.Tasks.Task ToggleSavedItemsAsync(int userId, int productId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : WcfConsoleClient.UserServiceReference.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<WcfConsoleClient.UserServiceReference.IUserService>, WcfConsoleClient.UserServiceReference.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<WcfService.UserDto> GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WcfService.UserDto>> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public int AddUser(Entities.User user) {
            return base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(Entities.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public string UpdateUser(Entities.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserAsync(Entities.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public string DeleteUser(int id) {
            return base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public WcfService.UserDto GetUserById(int id) {
            return base.Channel.GetUserById(id);
        }
        
        public System.Threading.Tasks.Task<WcfService.UserDto> GetUserByIdAsync(int id) {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public WcfService.UserDto GetUserByEmail(string email) {
            return base.Channel.GetUserByEmail(email);
        }
        
        public System.Threading.Tasks.Task<WcfService.UserDto> GetUserByEmailAsync(string email) {
            return base.Channel.GetUserByEmailAsync(email);
        }
        
        public string UpdatePassword(int id, string salt, string password) {
            return base.Channel.UpdatePassword(id, salt, password);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePasswordAsync(int id, string salt, string password) {
            return base.Channel.UpdatePasswordAsync(id, salt, password);
        }
        
        public string AddPremium(int id) {
            return base.Channel.AddPremium(id);
        }
        
        public System.Threading.Tasks.Task<string> AddPremiumAsync(int id) {
            return base.Channel.AddPremiumAsync(id);
        }
        
        public void ChangeAdmin(int id) {
            base.Channel.ChangeAdmin(id);
        }
        
        public System.Threading.Tasks.Task ChangeAdminAsync(int id) {
            return base.Channel.ChangeAdminAsync(id);
        }
        
        public void ChangePremium(int id) {
            base.Channel.ChangePremium(id);
        }
        
        public System.Threading.Tasks.Task ChangePremiumAsync(int id) {
            return base.Channel.ChangePremiumAsync(id);
        }
        
        public void ToggleSavedItems(int userId, int productId) {
            base.Channel.ToggleSavedItems(userId, productId);
        }
        
        public System.Threading.Tasks.Task ToggleSavedItemsAsync(int userId, int productId) {
            return base.Channel.ToggleSavedItemsAsync(userId, productId);
        }
    }
}
